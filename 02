tit=$"ㅤㅤ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢸"
tokens=$(echo "02f76cd1-eead-44ff-88dd-aa69538c7aef
f79ae136-8dcd-40c5-8421-d1371c9e50d1
6c360891-8ce5-45ba-a2c3-97e0a7139d99
91e22bd5-7b79-4fef-8dfa-c40f1ff3736b
db6327ec-3ad5-46a4-881e-1deff71c879a
4919b47c-f588-4e71-87e3-639b3af92e4d
03bc4539-13db-4045-9119-a937eb48d41d
6e7eb039-9816-4118-9c3b-bb906887722c
ddf114e4-c29b-44f1-b04b-1621234f2f5d
f922b71c-8b48-4363-a9fd-74c0757c161d")
while :; do
clear; echo -e $tit

  echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
  echo -e "         ≡ \e[01;37mmenu opções\e[0m ≡"
  echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
  echo -e " \e[01;37m〘*1*〙\e[0m\e[01;04;33mVERIFICAR SE HÁ ADS\e[0m\c"; echo -e "\e[02;03;37m   Ver se posso ganhar MB\e[0m"
  echo -e " \e[01;37m〘*2*〙\e[0m\e[01;04;33mVERIFICAR ADS NA MÃO\e[0m\c"; echo -e "\e[02;03;37m  Coloque o Pass aqui\e[0m"
  echo -e " \e[01;37m〘*3*〙\e[0m\e[01;04;33mINICIAR TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m Ir direto ao padrão\e[0m"
  echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
  echo -e " \e[01;37m『*4*』\e[0m\e[01;04;33mSOLICITAR PASS\e[0m\c"; echo -e "\e[02;03;37m  Use dados moveis nessa opção\e[0m"
  echo -e " \e[01;37m『*0*』\e[0m\e[01;04;33mCAIR FORA DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m   Net Livre\e[0m"
  echo -e " \e[00;31m═══════════════════════════════\e[0m"
  
veri=$(echo -e "\e[01;37m Opção: \e[0m")
  read -n1 -p "$veri" verifica; echo
    case $verifica in # case MENU
        1)
         while :; do
             echo -e "\e[01;37;41m # POR FAVOR, UTILIZE DADOS MOVEIS # \e[0m"|pv -qL 18
             echo -e "\e[01;37;41m #   OU IP DA VIVO NESSA OPÇÃO!    # \e[0m"|pv -qL 18; sleep 2.5
             clear; echo -e $tit; echo -e "\e[01;37;41m   VERIFICANDO SE HÁ ADS DISPONIVEL   \e[0m"; sleep .5; echo
                echo -e "      \e[01;37m REQUISITANDO O PASS\e[0m"
                echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                pass=$(curl -s -d "version=2" i.vivo.ddivulga.com/i/gp)
                pass2=$(echo $pass| jq -r .sctoken)
                pass3=$(echo $pass| grep -c sctoken)
                    case $pass3 in
                         0) echo -e "\e[00;33m ALGO SAIU MAL! \n dica: NÃO UTILIZE WI-FI OU VPN DURANTE A VERIFICAÇÃO\e[0m"; sleep 4; break;;
                         1) echo -e "\e[01;37m CERTO PASS\e[0m\e[01;32m OK!\e[0m"|pv -qL 20; sleep .5
                               echo -e "\e[01;37m PASS >\e[0m\e[00;32m $pass2\e[0m"; sleep 1
                    esac
                    
                    tx="NÃO HÁ ADS DISPONIVEL PRA ESSE CHIP FULEIRO...\n ENTÃO NO MOMENTO VOCÊ NÃO PODE GANHAR MB"
                    tx2="CONTINUANDO PARA OS TOKENS PADRÃO\n MAS SAIBA QUE NÃO GARANTIMOS QUE IRA FUNCIONAR!"
                echo; echo -e "     \e[01;37m VERIFICANDO SE HÁ ADS \e[0m"
                echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                pass=$(curl -s -d "version=2" i.vivo.ddivulga.com/i/gp)
                pass2=$(echo $pass| jq -r .sctoken)
                url=$(curl -s -d "slotId=%5B%7B%22slotId%22%3A110%2C%22target%22%3A%22%22%7D%5D&pageId=693930&insertionId=&insertionUUID=&insertionType=&referer=http%3A%2F%2Fportalrecarga.vivo.com.br%2F&accessPass=$pass2" http://e.vivo.ddivulga.com/api/v2.1/fetch -H "Origin: http://a.vivo.ddivulga.com")
                     
                     pass3=$(curl -s -d "slotId=%5B%7B%22slotId%22%3A110%2C%22target%22%3A%22%22%7D%5D&pageId=693930&insertionId=&insertionUUID=&insertionType=&referer=http%3A%2F%2Fportalrecarga.vivo.com.br%2F&accessPass=$pass2" http://e.vivo.ddivulga.com/api/v2.1/fetch -H "Origin: http://a.vivo.ddivulga.com" -w '%{response_code}' | grep -c 401)
                          case $pass3 in
                               1) echo -e "\e[01;33m ALGO DEU ERRADO!\n VERIFIQUE SE ESTÁ TUDO CERTO\e[0m"; sleep 3; break;;
                               *)
                          esac
        
                    while :; do # verificar ads on / token
                       token2=$(echo $url | grep -c appInstallRewardAdvUuid)
                             case $token2 in
                                  0) ttt=0; break;;
                                  *) echo -e "\e[01;37m OK ADS ON / AGORA VEREMOS SE HA TOKEN ONLINE\e[0m"
                             esac
                       toki=$(echo $url | jq -r '.["110"].appInstallRewardAdvUuid')
                           case $toki in
                              null);;
                                 *) ttt=1; break
                           esac
                       token=$(echo $url | grep -c "campid:")
                           case $token in
                                1) ttt=1; toki=$(echo $url | grep -o "campid:......................................." | cut -d":" -f2 | cut -d'"' -f2); break;;
                                0) echo -e "\e[01;37m NÃO ENCONTRAMOS TOKEN, PORÉM VOCÊ TERA SUCESSO NO PADRÃO\e[0m"; sleep .5; tx="CONTINUANDO PARA OS TOKENS PADRÃO"; tx2=; ttt=0; break
                           esac
                    done
                    numero=$(echo $url | jq -r '.msisdn')
                    case $ttt in
                         0) echo -e "\e[01;33m $tx\e[0m"|pv -qL 20; sleep .5
                            echo -e "\e[01;02;37m $tx2\e[0m"|pv -qL 18; sleep 3;;
                         1) echo -e "\e[01;37m CERTO, ADS\e[0m\e[01;32m ON!\e[0m"|pv -qL 18; sleep .5
                            echo -e "\e[01;37m TOKEN >\e[0m\e[00;32m $toki\e[0m"; sleep .5
                            echo -e "\e[01;37m NUMERO >\e[0m\e[00;32m $numero\e[0m"; sleep 1
                            
                            echo; echo -e "      \e[01;37m INICIANDO O TOKEN \e[0m"
                            echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                                VEZES=9999
                                for i in $(seq $VEZES);
                                do
                            response=$(data=$"msisdn=$numero&campid=$toki&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://navegue.vivo.com.br/" -d "${data}")
                            body=$(echo $response | jq -r '.packprovision')

                                case $body in
                                 null) echo -e "\e[01;33m MB INDISPONIVEL NESSE TOKEN\e[0m"|pv -qL 20; sleep .3; echo -e "\e[01;02;37m CONTINUANDO PARA OS TOKENS PADRÃO!\e[0m"|pv -qL 18; sleep 3; break && break;;
                      packprovisionOK) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18
                                esac
                                done
                                esac
                                
                           clear; echo -e $tit
                                  echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
                                  echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $numero \e[0m"; sleep .5; echo
                           qtdtokens=$(echo "$tokens"| wc -l)
                           for o in $(seq $qtdtokens);
                              do
                           VEZES=9999
                           tokens1=("sed '"$o"p; d'")
                           tokens2=$(echo "$tokens" | eval $tokens1)
                              echo -e "\e[07;01;37;40m   T O K E N \e[01;36;40m $o \e[0m"
                              echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                          for i in $(seq $VEZES);
                             do
                          response=$(data=$"msisdn=$numero&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                          grepi=$(echo $response | grep -c "Invalid Campaign")
         case $grepi in
              1) echo -e "\e[01;33m TOKEN RETORNOU INVÁLIDO! TENTE OUTRO\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
     grepi2=$(echo $response | grep -c "Transaction limit exceeded")
         case $grepi2 in
              1) echo -e "\e[01;33m LIMITE DE TENTATIVAS EXCEDIDO NESTE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi3=$(echo $response | grep -c "Not eligible")
         case $grepi3 in
              1) echo -e "\e[01;33m TOKEN BOM! MAS O CHIP NÃO ESTÁ ELEGÍVEL NELE\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi4=$(echo $response | grep -c "packprovisionOK")
         case $grepi4 in
              1) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
              *)
         esac
body=$(echo $response | jq '.packprovision')
                                pack=$'"packprovisionOK"'
                                case $o in
                                  $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                           *) mssg=$(echo "INICIANDO O PRÓXIMO");;
                                           *)
                 esac
           grepi5=$(echo $response | grep -c "7x1 elegibility")
                 case $grepi5 in
                      1) echo -e "\e[01;32m SERVIDOR FALHOU! CORRE LOGO\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 25;;
                      *)
                 esac
              done
           done
                          echo -e "         ≡ \e[01;37mO P Ç Õ E S\e[0m ≡"
                          echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                          echo -e " \e[01;37m〘*1*〙\e[0m\e[01;04;33mIR AO TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m   Apenas cole o numero\e[0m"
                          echo -e " \e[01;37m〘*2*〙\e[0m\e[01;04;33mREPETIR COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automatico\e[0m"
                          echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                          echo -e " \e[01;37m『*3*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                          echo -e " \e[01;37m『*0*』\e[0m\e[01;04;33mSAIR DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Net Livre\e[0m"
                          echo -e " \e[00;31m═══════════════════════════════\e[0m"
               
                          while :; do
                            veri=$(echo -e "\e[01;37m Opção: \e[0m")
                          read -n1 -p "$veri" opc2; echo
                          case $opc2 in
                              1)
                                clear; echo -e $tit
                                       echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
                                       echo -e "\e[01;37;41m Coloque 55+DDD+NÚMERO \e[0m"
                                read -p "$veri" NUMERO; sleep 1
                                    limite=$(echo $NUMERO | wc -m)
                                         case $limite in
                                              14) break;;
                                               *) echo -e "\e[01;33m POR FAVOR, COLOQUE O NUMERO CORRETAMENTE 13 DIGITOS\e[0m"
                                         esac
                                clear; echo -e $tit
                                       echo -e "\e[01;37;41m           TESTADOR PADRAO           \e[0m"; sleep .4; echo
                                       echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $NUMERO \e[0m"; sleep .5; echo
                                veri=$(echo -e "\e[01;37m Numero: \e[0m")
                                for o in $(seq $qtdtokens);
                                   do
                                VEZES=9999
                                tokens1=("sed '"$o"p; d'")
                                tokens2=$(echo "$tokens" | eval $tokens1)
                                       echo -e "\e[07;01;37;40m   T O K E N \e[01;36;40m $o \e[0m"
                                       echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                                for i in $(seq $VEZES);
                                  do
                                response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                                grepi=$(echo $response | grep -c "Invalid Campaign")
         case $grepi in
              1) echo -e "\e[01;33m TOKEN RETORNOU INVÁLIDO! TENTE OUTRO\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
     grepi2=$(echo $response | grep -c "Transaction limit exceeded")
         case $grepi2 in
              1) echo -e "\e[01;33m LIMITE DE TENTATIVAS EXCEDIDO NESTE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi3=$(echo $response | grep -c "Not eligible")
         case $grepi3 in
              1) echo -e "\e[01;33m TOKEN BOM! MAS O CHIP NÃO ESTÁ ELEGÍVEL NELE\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi4=$(echo $response | grep -c "packprovisionOK")
         case $grepi4 in
              1) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
              *)
         esac
body=$(echo $response | jq '.packprovision')
                                pack=$'"packprovisionOK"'
                                case $o in
                                  $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                           *) mssg=$(echo "INICIANDO O PRÓXIMO");;
                                           *)
                 esac
           grepi5=$(echo $response | grep -c "7x1 elegibility")
                 case $grepi5 in
                      1) echo -e "\e[01;32m SERVIDOR FALHOU! CORRE LOGO\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 25;;
                      *)
                 esac
              done
           done
                           echo -e "         ≡ \e[01;37mO P Ç Õ E S\e[0m ≡"
                           echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                           echo -e " \e[01;37m〘*1*〙\e[0m\e[01;04;33mREPETIR TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m Apenas cole o numero\e[0m"
                           echo -e " \e[01;37m〘*2*〙\e[0m\e[01;04;33mINICIAR COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automatico\e[0m"
                           echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                           echo -e " \e[01;37m『*3*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                           echo -e " \e[01;37m『*0*』\e[0m\e[01;04;33mSAIR DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Net Livre\e[0m"
                           echo -e " \e[00;31m═══════════════════════════════\e[0m";;
                          2) break;;
                          3) break;;
                          0) exit;;
                          *) echo -e "\e[01;37;41m CALMA AMIGO \e[0m"; sleep 1
                         esac
                        done
                          case $opc2 in
                              3) break
                          esac
                     done;;
                 
    2) 
     while :; do
             echo -e "\e[01;02;37m # Dica: Você pode pegar o pass no site da vivo:\n        \e[01;02;04;37mi.vivo.ddivulga.com/i/gp\e[0m\n \e[01;02;37m# Porem é mais pratico na opçáo 4 ;)\e[0m"; sleep 3
             clear; echo -e $tit; echo -e "\e[01;37;41m   VERIFICANDO SE HÁ ADS DISPONIVEL   \e[0m"; sleep .5; echo
              
             echo -e "\e[01;37;41m Coloque o PASS \e[0m"
                    read -n86 -p "Pass: " passs; sleep 1.5
             clear; echo -e $tit; echo -e "\e[01;37;41m   VERIFICANDO SE HÁ ADS DISPONIVEL   \e[0m"; sleep .5; echo
          
             tx="NÃO HÁ ADS DISPONIVEL PRA ESSE CHIP..."
             tx2="CONTINUANDO PARA OS TOKENS PADRÃO\n MAS SAIBA QUE NÃO GARANTIMOS QUE IRA FUNCIONAR!"
                echo -e "     \e[01;37m VERIFICANDO SE HÁ ADS \e[0m"
                echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
             pass2=$"$passs"
             url=$(curl -s -d "slotId=%5B%7B%22slotId%22%3A110%2C%22target%22%3A%22%22%7D%5D&pageId=693930&insertionId=&insertionUUID=&insertionType=&referer=http%3A%2F%2Fportalrecarga.vivo.com.br%2F&accessPass=$pass2" http://e.vivo.ddivulga.com/api/v2.1/fetch -H "Origin: http://a.vivo.ddivulga.com")
                    
                    pass3=$(curl -s -d "slotId=%5B%7B%22slotId%22%3A110%2C%22target%22%3A%22%22%7D%5D&pageId=693930&insertionId=&insertionUUID=&insertionType=&referer=http%3A%2F%2Fportalrecarga.vivo.com.br%2F&accessPass=$pass2" http://e.vivo.ddivulga.com/api/v2.1/fetch -H "Origin: http://a.vivo.ddivulga.com" -w '%{response_code}' | grep -c 401)
                          case $pass3 in
                               1) echo -e "\e[01;33m ALGO DEU ERRADO!\n VERIFIQUE SE ESTÁ TUDO CERTO\e[0m"; sleep 3; break;;
                               *)
                          esac
                    echo $url
             while :; do # verificar ads on / token
                token2=$(echo $url | grep -c appInstallRewardAdvUuid)
                    case $token2 in
                         0) ttt=0; break;;
                         *) echo -e "\e[01;37m OK ADS ON / AGORA VEREMOS SE HA TOKEN ONLINE\e[0m"
                    esac
                toki=$(echo $url | jq -r '.["110"].appInstallRewardAdvUuid')
                    case $toki in
                         null);;
                            *) ttt=1; break
                    esac
                token=$(echo $url | grep -c "campid:")
                    case $token in
                         1) ttt=1; toki=$(echo $url | grep -o "campid:......................................." | cut -d":" -f2 | cut -d'"' -f2); break;;
                         0) echo -e "\e[01;37m NÃO ENCONTRAMOS TOKEN, PORÉM VOCÊ TERA SUCESSO NO PADRÃO\e[0m"; sleep .5; tx="CONTINUANDO PARA OS TOKENS PADRÃO"; tx2=; ttt=0; break
                    esac
             done
              numero=$(echo $url | jq -r '.msisdn')
                case $ttt in
                       0) echo -e "\e[01;33m $tx\e[0m"|pv -qL 20; sleep .5
                            echo -e "\e[01;02;37m $tx2\e[0m"|pv -qL 18; sleep 3;;
                       1) echo -e "\e[01;37m CERTO, ADS\e[0m\e[01;32m ON!\e[0m"|pv -qL 18; sleep .5
                          echo -e "\e[01;37m TOKEN >\e[0m\e[00;32m $toki\e[0m"; sleep .5
                          echo -e "\e[01;37m NUMERO >\e[0m\e[00;32m $numero\e[0m"; sleep 1
                            
                          echo; echo -e "      \e[01;37m INICIANDO O TOKEN \e[0m"
                          echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                          VEZES=9999
                         for i in $(seq $VEZES);
                                do
                          response=$(data=$"msisdn=$numero&campid=$toki&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://navegue.vivo.com.br/" -d "${data}")
                          body=$(echo $response | jq -r '.packprovision')

                            case $body in
                                 null) echo -e "\e[01;33m MB INDISPONIVEL NESSE TOKEN\e[0m"|pv -qL 20; sleep .3; echo -e "\e[01;02;37m CONTINUANDO PARA OS TOKENS PADRÃO!\e[0m"|pv -qL 18; sleep 3; break && break;;
                      packprovisionOK) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18
                            esac
                           done
                esac

             clear; echo -e $tit
                    echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
                    echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $numero \e[0m"; sleep .5; echo
                    qtdtokens=$(echo "$tokens"| wc -l)
                    for o in $(seq $qtdtokens);
                       do
                    VEZES=9999
                    tokens1=("sed '"$o"p; d'")
                    tokens2=$(echo "$tokens" | eval $tokens1)
                      echo -e "\e[07;01;37;40m   T O K E N \e[01;36;40m $o \e[0m"
                      echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                    for i in $(seq $VEZES);
                       do
                    response=$(data=$"msisdn=$numero&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                    grepi=$(echo $response | grep -c "Invalid Campaign")
         case $grepi in
              1) echo -e "\e[01;33m TOKEN RETORNOU INVÁLIDO! TENTE OUTRO\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
     grepi2=$(echo $response | grep -c "Transaction limit exceeded")
         case $grepi2 in
              1) echo -e "\e[01;33m LIMITE DE TENTATIVAS EXCEDIDO NESTE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi3=$(echo $response | grep -c "Not eligible")
         case $grepi3 in
              1) echo -e "\e[01;33m TOKEN BOM! MAS O CHIP NÃO ESTÁ ELEGÍVEL NELE\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi4=$(echo $response | grep -c "packprovisionOK")
         case $grepi4 in
              1) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
              *)
                     esac
body=$(echo $response | jq '.packprovision')
                          pack=$'"packprovisionOK"'
                              case $o in
                              $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                       *) mssg=$(echo "INICIANDO O PRÓXIMO");;
                                       *)
                 esac
           grepi5=$(echo $response | grep -c "7x1 elegibility")
                 case $grepi5 in
                      1) echo -e "\e[01;32m SERVIDOR FALHOU! CORRE LOGO\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 25;;
                      *)
                 esac
              done
           done
                          echo -e "         ≡ \e[01;37mO P Ç Õ E S\e[0m ≡"
                          echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                          echo -e " \e[01;37m〘*1*〙\e[0m\e[01;04;33mIR AO TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m   Apenas cole o numero\e[0m"
                          echo -e " \e[01;37m〘*2*〙\e[0m\e[01;04;33mDE NOVO COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automatico\e[0m"
                          echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                          echo -e " \e[01;37m『*3*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                          echo -e " \e[01;37m『*0*』\e[0m\e[01;04;33mSAIR DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Net Livre\e[0m"
                          echo -e " \e[00;31m═══════════════════════════════\e[0m"

               
                  while :; do
                  veri=$(echo -e "\e[01;37m Opção: \e[0m")
                   read -n1 -p "$veri" opc2; echo
                  case $opc2 in
                       1)
                       clear; echo -e $tit
                            echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
                            echo -e "\e[01;37;41m Coloque 55+DDD+NÚMERO \e[0m"
                            read -p "$veri" NUMERO; sleep 1
                       clear; echo -e $tit
                            echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
                            echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $NUMERO \e[0m"; sleep .5; echo
                            veri=$(echo -e "\e[01;37m Numero: \e[0m")
                            for o in $(seq $qtdtokens);
                               do
                            VEZES=9999
                            tokens1=("sed '"$o"p; d'")
                            tokens2=$(echo "$tokens" | eval $tokens1)
                               echo -e "\e[07;01;37;40m   T O K E N \e[01;36;40m $o \e[0m"
                               echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
                            for i in $(seq $VEZES);
                               do
                            response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
                            grepi=$(echo $response | grep -c "Invalid Campaign")
         case $grepi in
              1) echo -e "\e[01;33m TOKEN RETORNOU INVÁLIDO! TENTE OUTRO\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
     grepi2=$(echo $response | grep -c "Transaction limit exceeded")
         case $grepi2 in
              1) echo -e "\e[01;33m LIMITE DE TENTATIVAS EXCEDIDO NESTE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi3=$(echo $response | grep -c "Not eligible")
         case $grepi3 in
              1) echo -e "\e[01;33m TOKEN BOM! MAS O CHIP NÃO ESTÁ ELEGÍVEL NELE\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi4=$(echo $response | grep -c "packprovisionOK")
         case $grepi4 in
              1) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
              *)
         esac
                              case $o in
                        $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                 *) mssg=$(echo "INICIANDO O PRÓXIMO");;
                              *)
                 esac
           grepi5=$(echo $response | grep -c "7x1 elegibility")
                 case $grepi5 in
                      1) echo -e "\e[01;32m SERVIDOR FALHOU! CORRE LOGO\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 25;;
                      *)
                 esac
              done
           done
                            echo -e "         ≡ \e[01;37mO P Ç Õ E S\e[0m ≡"
                           echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                           echo -e " \e[01;37m〘*1*〙\e[0m\e[01;04;33mREPETIR TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m Apenas cole o numero\e[0m"
                           echo -e " \e[01;37m〘*2*〙\e[0m\e[01;04;33mINICIAR COM VERIFICAÇÃO\e[0m\c"; echo -e "\e[02;03;37m Tudo automatico\e[0m"
                           echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                           echo -e " \e[01;37m『*3*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                           echo -e " \e[01;37m『*0*』\e[0m\e[01;04;33mSAIR DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Net Livre\e[0m"
                           echo -e " \e[00;31m═══════════════════════════════\e[0m";;
                       2) break;;
                       3) break;;
                       0) exit;;
                       *) echo -e "\e[01;37;41m CALMA AMIGO \e[0m"; sleep 1
                   esac
                   done
                      case $opc2 in
                           3) break
                      esac
                  done;;
                     
    3)
     while :; do
        clear; echo -e $tit
               echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
         qtdtokens=$(echo "$tokens"| wc -l)
               echo -e "\e[01;37;41m Coloque 55+DDD+NÚMERO \e[0m"
         veri=$(echo -e "\e[01;37m Numero: \e[0m")
         while :; do
          read -p "$veri" NUMERO; sleep 1
                limite=$(echo $NUMERO | wc -m)
                      case $limite in
                          14) break;;
                           *) echo -e "\e[01;33m POR FAVOR, COLOQUE O NUMERO CORRETAMENTE 13 DIGITOS\e[0m"; sleep .2
                      esac
         done
         clear; echo -e $tit
                echo -e "\e[01;37;41m           TESTADOR PADRÃO           \e[0m"; sleep .4; echo
                echo -e "\e[07;01;37;40m NUMERO \e[01;31;47m $NUMERO \e[0m"; sleep .5; echo
          for o in $(seq $qtdtokens);
             do
         VEZES=9999
         tokens1=("sed '"$o"p; d'")
         tokens2=$(echo "$tokens" | eval $tokens1)
                 echo -e "\e[07;01;37;40m   T O K E N \e[01;36;40m $o \e[0m"
                 echo -e "\e[01;32m TOKEN \e[01;37m: \e[0m\e[01;04;37m$tokens2\e[0m"
          for i in $(seq $VEZES);
             do
         response=$(data=$"msisdn=$NUMERO&campid=$tokens2&opCode=VV" && site="http://interatividade.vivo.ddivulga.com/carrotProcess.php" && curl -s "${site}" -H "Referer: http://a.vivo.ddivulga.com/" -d "${data}")
         grepi=$(echo $response | grep -c "Invalid Campaign")
         case $grepi in
              1) echo -e "\e[01;33m TOKEN RETORNOU INVÁLIDO! TENTE OUTRO\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
     grepi2=$(echo $response | grep -c "Transaction limit exceeded")
         case $grepi2 in
              1) echo -e "\e[01;33m LIMITE DE TENTATIVAS EXCEDIDO NESTE TOKEN\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi3=$(echo $response | grep -c "Not eligible")
         case $grepi3 in
              1) echo -e "\e[01;33m TOKEN BOM! MAS O CHIP NÃO ESTÁ ELEGÍVEL NELE\e[0m / \e[01;33m$mssg\e[0m"|pv -qL 20; echo; break;;
              *)
         esac
    grepi4=$(echo $response | grep -c "packprovisionOK")
         case $grepi4 in
              1) echo -e "\e[01;32m SUCESSO SÓ ESPERAR CAIR\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 18;;
              *)
         esac
             case $o in
                        $qtdtokens) mssg=$(echo "FINALIZANDO");;
                                 *) mssg=$(echo "INICIANDO O PRÓXIMO");;
             *)
                 esac
           grepi5=$(echo $response | grep -c "7x1 elegibility")
                 case $grepi5 in
                      1) echo -e "\e[01;32m SERVIDOR FALHOU! CORRE LOGO\e[0m / \e[01;37mCONTAGEM: $i\e[0m"|pv -qL 25;;
                      *)
                 esac
              done
           done
                            echo -e "         ≡ \e[01;37mO P Ç Õ E S\e[0m ≡"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m〘*1*〙\e[0m\e[01;04;33mREPETIR TESTADOR PADRÃO\e[0m\c"; echo -e "\e[02;03;37m Apenas cole o numero\e[0m"
                       echo -e "  \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m"
                       echo -e "  \e[01;37m『*2*』\e[0m\e[01;04;33mVOLTAR PARA O MENU\e[0m\c"; echo -e "\e[02;03;37m\e[0m"
                       echo -e "  \e[01;37m『*0*』\e[0m\e[01;04;33mSAIR DO SCRIPT\e[0m\c"; echo -e "\e[02;03;37m     Net Livre\e[0m"
                       echo -e "  \e[00;31m═══════════════════════════════\e[0m"
                       veri=$(echo -e "\e[01;37m Opção: \e[0m")
                          read -n1 -p "$veri" opc2; echo
                          case $opc2 in
                              1);;
                              2) break;;
                              0) exit;;
                              *) echo -e "\e[01;37;41m CALMA AMIGO \e[0m"; sleep 1
                          esac
                          case $opc2 in
                              3) break
                          esac
                    done;;
                
    4) 
      clear; echo -e $tit
             echo -e "\e[01;37;41m            SOLICITAR PASS             \e[0m"; echo
             echo -e "\e[01;02;37m # POR FAVOR, UTILIZE A REDE DO CHIP NESSA OPÇÃO! #\e[0m"|pv -qL 25; echo
             echo -e "      \e[01;37m REQUISITANDO O PASS\e[0m"
             echo -e " \e[00;31m══════════════\e[0m\e[01;37m︾\e[00;31m═══════════════\e[0m";sleep .5
                
                pass=$(curl -s -d "version=2" i.vivo.ddivulga.com/i/gp)
                pass2=$(echo $pass| jq -r .sctoken)
                pass3=$(echo $pass| grep -c sctoken)
                    case $pass3 in
                         0) echo -e "\e[00;33m ALGO SAIU MAL! \n dica: NÃO UTILIZE WI-FI OU VPN DURANTE A VERIFICAÇÃO\e[0m"; sleep 2;;
                         1) echo -e "\e[01;37m CERTO PASS\e[0m\e[01;32m OK!\e[0m"|pv -qL 20; sleep .5
                               echo -e "\e[01;37m PASS > \e[0m\e[01;04;32m$pass2\e[0m"; sleep 1
                         echo; echo -e "\e[01;02;37m # AGORA SÓ COPIAR E SALVAR EM ALGUM LUGAR #\e[0m"; sleep .5; echo
                    esac
             echo; echo -e "\e[01;33m PRESSIONE QUALQUER TECLA PARA VOLTAR\e[0m"
              read -n1;;
              
    0) exit;;
    *) echo -e "\e[01;37;41m CALMA AMIGO \e[0m"; sleep 1
              
     esac # case MENU
    done # primeiro loop
